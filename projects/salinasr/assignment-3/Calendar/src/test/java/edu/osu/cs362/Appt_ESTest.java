/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 02:53:41 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.osu.cs362.Appt;
//import org.evosuite.runtime.EvoRunner;
//import org.evosuite.runtime.EvoRunnerParameters;
//import org.junit.runner.RunWith;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Appt_ESTest {

  @Test
  public void test00()  throws Throwable  {
      Appt appt0 = new Appt(10, 10, 0, 0, 10, "uOQom>*Jc9<ul$:5", "uOQom>*Jc9<ul$:5");
      appt0.setDescription("uOQom>*Jc9<ul$:5");
      assertEquals(10, appt0.getStartHour());
      assertEquals("uOQom>*Jc9<ul$:5", appt0.getTitle());
      assertEquals(10, appt0.getStartYear());
      assertEquals(10, appt0.getStartMinute());
      assertEquals("uOQom>*Jc9<ul$:5", appt0.getDescription());
      assertEquals(0, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartDay());
  }

  @Test
  public void test01()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, 12, 12, "", "");
      appt0.setTitle("");
      assertEquals(12, appt0.getStartMonth());
      assertTrue(appt0.getValid());
      assertEquals(23, appt0.getStartDay());
      assertEquals(23, appt0.getStartMinute());
      assertEquals(23, appt0.getStartHour());
      assertEquals(12, appt0.getStartYear());
  }

  @Test
  public void test02()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, (String) null, (String) null);
      appt0.setTitle((String) null);
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMonth());
  }

  @Test
  public void test03()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, 12, 12, "", "");
      boolean boolean0 = appt0.getValid();
      assertEquals(23, appt0.getStartMinute());
      assertTrue(boolean0);
      assertEquals(23, appt0.getStartHour());
      assertEquals(12, appt0.getStartMonth());
      assertEquals(23, appt0.getStartDay());
      assertEquals(12, appt0.getStartYear());
  }

  @Test
  public void test04()  throws Throwable  {
      Appt appt0 = new Appt(6, (-686), 12, 0, 0, "", "A*,u6us^Cs<");
      int int0 = appt0.getStartYear();
      assertEquals(12, appt0.getStartDay());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, int0);
      assertEquals("A*,u6us^Cs<", appt0.getDescription());
      assertEquals(6, appt0.getStartHour());
      assertEquals("", appt0.getTitle());
      assertEquals(-686, appt0.getStartMinute());
      assertFalse(appt0.getValid());
  }

  @Test
  public void test05()  throws Throwable  {
      Appt appt0 = new Appt(Integer.MAX_VALUE, (-1697), 31, 31, (-1697), "4;xn=f", "4;xn=f");
      int int0 = appt0.getStartYear();
      assertEquals(31, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(2147483647, appt0.getStartHour());
      assertEquals((-1697), int0);
      assertEquals(-1697, appt0.getStartMinute());
      assertEquals("4;xn=f", appt0.getDescription());
      assertEquals(31, appt0.getStartMonth());
      assertEquals("4;xn=f", appt0.getTitle());
  }

  @Test
  public void test06()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, (String) null, (String) null);
      int int0 = appt0.getStartMonth();
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartDay());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
  }

  @Test
  public void test07()  throws Throwable  {
      Appt appt0 = new Appt(0, 60000, 60000, 60000, 60000, "_RK|cqY[9th[cNJ", "_RK|cqY[9th[cNJ");
      int int0 = appt0.getStartMonth();
      assertEquals("_RK|cqY[9th[cNJ", appt0.getDescription());
      assertEquals(0, appt0.getStartHour());
      assertEquals(60000, appt0.getStartMinute());
      assertEquals(60000, appt0.getStartDay());
      assertEquals(60000, int0);
      assertEquals(60000, appt0.getStartYear());
      assertEquals("_RK|cqY[9th[cNJ", appt0.getTitle());
      assertFalse(appt0.getValid());
  }

  @Test
  public void test08()  throws Throwable  {
      Appt appt0 = new Appt((-333), (-333), (-333), (-333), (-333), "pm", "");
      int int0 = appt0.getStartMinute();
      assertEquals("", appt0.getDescription());
      assertEquals((-333), int0);
      assertEquals(-333, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(-333, appt0.getStartMonth());
      assertEquals(-333, appt0.getStartDay());
      assertEquals(-333, appt0.getStartYear());
      assertEquals("pm", appt0.getTitle());
  }

  @Test
  public void test09()  throws Throwable  {
      Appt appt0 = new Appt(0, 60000, 60000, 60000, 60000, "_RK|cqY[9th[cNJ", "_RK|cqY[9th[cNJ");
      int int0 = appt0.getStartHour();
      assertEquals(0, int0);
      assertEquals(60000, appt0.getStartYear());
      assertEquals(60000, appt0.getStartMonth());
      assertEquals("_RK|cqY[9th[cNJ", appt0.getDescription());
      assertEquals(60000, appt0.getStartDay());
      assertEquals(60000, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals("_RK|cqY[9th[cNJ", appt0.getTitle());
  }

  @Test
  public void test10()  throws Throwable  {
      Appt appt0 = new Appt(1, 983, 1, 983, 983, "Ew|2CQ*\"", "Ew|2CQ*\"");
      int int0 = appt0.getStartHour();
      assertEquals(983, appt0.getStartYear());
      assertEquals("Ew|2CQ*\"", appt0.getDescription());
      assertEquals(1, appt0.getStartDay());
      assertEquals(983, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(983, appt0.getStartMinute());
      assertEquals("Ew|2CQ*\"", appt0.getTitle());
      assertEquals(1, int0);
  }

  @Test
  public void test11()  throws Throwable  {
      Appt appt0 = new Appt((-40), (-840), (-840), (-40), (-40), "", "ChKJvy");
      int int0 = appt0.getStartDay();
      assertEquals("ChKJvy", appt0.getDescription());
      assertFalse(appt0.getValid());
      assertEquals("", appt0.getTitle());
      assertEquals((-840), int0);
      assertEquals(-840, appt0.getStartMinute());
      assertEquals(-40, appt0.getStartMonth());
      assertEquals(-40, appt0.getStartYear());
      assertEquals(-40, appt0.getStartHour());
  }

  @Test
  public void test12()  throws Throwable  {
      Appt appt0 = new Appt(6, (-686), 12, 0, 0, "", "A*,u6us^Cs<");
      appt0.setStartMinute(0);
      appt0.setStartMonth(11);
      appt0.setStartHour(11);
      appt0.toString();
      assertEquals(11, appt0.getStartHour());
  }

  @Test
  public void test13()  throws Throwable  {
      Appt appt0 = new Appt(1, 59, 1, 1964, 1, "", "");
      boolean boolean0 = appt0.getValid();
      assertEquals(1964, appt0.getStartMonth());
      assertEquals(1, appt0.getStartHour());
      assertEquals(1, appt0.getStartDay());
      assertFalse(boolean0);
      assertEquals(1, appt0.getStartYear());
      assertEquals(59, appt0.getStartMinute());
  }

  @Test
  public void test14()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, 12, 12, "", "");
      int int0 = appt0.getStartMinute();
      assertEquals(12, appt0.getStartYear());
      assertEquals(23, int0);
      assertEquals(12, appt0.getStartMonth());
      assertEquals(23, appt0.getStartDay());
      assertEquals(23, appt0.getStartHour());
      assertTrue(appt0.getValid());
  }

  @Test
  public void test15()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, " P9f~YSYZ1/(", " P9f~YSYZ1/(");
      int int0 = appt0.getStartDay();
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(0, int0);
      assertEquals(" P9f~YSYZ1/(", appt0.getDescription());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
      assertEquals(" P9f~YSYZ1/(", appt0.getTitle());
  }

  @Test
  public void test16()  throws Throwable  {
      Appt appt0 = new Appt(25, 7, 25, 7, 25, "Invai?XGCValue-frational", "Invai?XGCValue-frational");
      appt0.setStartHour(0);
      appt0.toString();
      assertEquals(0, appt0.getStartHour());
  }

  @Test
  public void test17()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 1879, 1879, 1694, " ,", " ,");
      appt0.setStartYear((-3358));
      assertEquals(-3358, appt0.getStartYear());
  }

  @Test
  public void test18()  throws Throwable  {
      Appt appt0 = new Appt(0, 1043, 1043, 1043, 1043, "oK \"fgX'mpQ?`", "oK \"fgX'mpQ?`");
      appt0.setStartMinute(0);
      appt0.setStartDay(11);
      appt0.setStartMonth(0);
      assertEquals(11, appt0.getStartDay());
  }

  @Test
  public void test19()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 1879, 1879, 1694, " ,", " ,");
      assertEquals(" ,", appt0.getDescription());
      
      appt0.setDescription((String) null);
      assertEquals(1879, appt0.getStartDay());
  }

  @Test
  public void test20()  throws Throwable  {
      Appt appt0 = new Appt(19, 19, 1, 1, 19, "V}SY@", "V}SY@");
      String string0 = appt0.toString();
      assertEquals("\t1/1/19 at 7:19pm ,V}SY@, V}SY@\n", string0);
      assertNotNull(string0);
  }

  @Test
  public void test21()  throws Throwable  {
      Appt appt0 = new Appt(0, 1043, 1043, 1043, 1043, "oK \"fgX'mpQ?`", "oK \"fgX'mpQ?`");
      String string0 = appt0.toString();
      assertEquals("oK \"fgX'mpQ?`", appt0.getTitle());
      assertEquals(0, appt0.getStartHour());
      assertEquals(1043, appt0.getStartMonth());
      assertEquals(1043, appt0.getStartYear());
      assertEquals(1043, appt0.getStartMinute());
      assertEquals(1043, appt0.getStartDay());
      assertNull(string0);
      assertEquals("oK \"fgX'mpQ?`", appt0.getDescription());
  }

  @Test
  public void test22()  throws Throwable  {
      Appt appt0 = new Appt((-2743), (-2743), (-2743), (-2743), (-2743), "Invalidgract]on-l", "Invalidgract]on-l");
      String string0 = appt0.getTitle();
      assertEquals(-2743, appt0.getStartYear());
      assertEquals(-2743, appt0.getStartHour());
      assertEquals("Invalidgract]on-l", string0);
      assertEquals(-2743, appt0.getStartDay());
      assertEquals(-2743, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals("Invalidgract]on-l", appt0.getDescription());
      assertEquals(-2743, appt0.getStartMonth());
  }

  @Test
  public void test23()  throws Throwable  {
      Appt appt0 = new Appt((-2749), (-2749), (-2749), (-2749), (-2749), "x-}!zDlfGF*h|n*|v", "x-}!zDlfGF*h|n*|v");
      int int0 = appt0.getStartMonth();
      assertEquals(-2749, appt0.getStartYear());
      assertEquals(-2749, appt0.getStartHour());
      assertEquals(-2749, appt0.getStartDay());
      assertEquals(-2749, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals("x-}!zDlfGF*h|n*|v", appt0.getDescription());
      assertEquals((-2749), int0);
      assertEquals("x-}!zDlfGF*h|n*|v", appt0.getTitle());
  }

  @Test
  public void test24()  throws Throwable  {
      Appt appt0 = new Appt((-1), 0, 0, 0, 1243, "AX", "AX");
      int int0 = appt0.getStartMinute();
      assertEquals(1243, appt0.getStartYear());
      assertEquals(-1, appt0.getStartHour());
      assertEquals(0, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals("AX", appt0.getDescription());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartMonth());
      assertEquals("AX", appt0.getTitle());
  }

  @Test
  public void test25()  throws Throwable  {
      Appt appt0 = new Appt((-4200), (-4200), (-5066), 2007, 60000, "g", "g");
      int int0 = appt0.getStartHour();
      assertEquals(60000, appt0.getStartYear());
      assertEquals("g", appt0.getTitle());
      assertEquals(2007, appt0.getStartMonth());
      assertEquals(-4200, appt0.getStartMinute());
      assertEquals((-4200), int0);
      assertEquals("g", appt0.getDescription());
      assertEquals(-5066, appt0.getStartDay());
      assertFalse(appt0.getValid());
  }

  @Test
  public void test26()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 1879, 1879, 1694, " ,", " ,");
      int int0 = appt0.getStartDay();
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(" ,", appt0.getTitle());
      assertEquals(1879, int0);
      assertEquals(" ,", appt0.getDescription());
      assertEquals(1879, appt0.getStartMonth());
      assertEquals(1694, appt0.getStartYear());
      assertEquals(0, appt0.getStartHour());
  }

  @Test
  public void test27()  throws Throwable  {
      Appt appt0 = new Appt((-47), (-47), (-47), (-47), (-47), ";9&A", ";9&A");
      String string0 = appt0.getDescription();
      assertEquals(-47, appt0.getStartMinute());
      assertEquals(-47, appt0.getStartDay());
      assertEquals(";9&A", appt0.getTitle());
      assertEquals(-47, appt0.getStartYear());
      assertEquals(-47, appt0.getStartHour());
      assertEquals(-47, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(";9&A", string0);
  }

  @Test
  public void test28()  throws Throwable  {
      Appt appt0 = new Appt(0, 31, 31, 31, 2390, "PGJ9:]:6eu", "\t");
      int int0 = appt0.getStartYear();
      assertEquals(2390, int0);
      assertEquals(0, appt0.getStartHour());
      assertEquals(31, appt0.getStartMinute());
      assertEquals(31, appt0.getStartMonth());
      assertEquals("PGJ9:]:6eu", appt0.getTitle());
      assertEquals(31, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals("\t", appt0.getDescription());
  }
}
