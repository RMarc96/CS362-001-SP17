/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 02:55:52 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.osu.cs362.Appt;
import edu.osu.cs362.CalDay;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.Locale;
//import org.evosuite.runtime.EvoRunner;
//import org.evosuite.runtime.EvoRunnerParameters;
//import org.evosuite.runtime.mock.java.util.GregorianCalendar;
//import org.junit.runner.RunWith;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CalDay_ESTest {

  @Test
  public void test00()  throws Throwable  {
      GregorianCalendar GregorianCalendar0 = new GregorianCalendar();
      CalDay calDay0 = new CalDay((GregorianCalendar) GregorianCalendar0);
      calDay0.iterator();
  }

  @Test
  public void test01()  throws Throwable  {
      GregorianCalendar GregorianCalendar0 = new GregorianCalendar();
      CalDay calDay0 = new CalDay((GregorianCalendar) GregorianCalendar0);
      calDay0.isValid();
  }

  @Test
  public void test02()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.isValid();
  }

  @Test
  public void test03()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.getYear();
  }

  @Test
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      GregorianCalendar GregorianCalendar0 = new GregorianCalendar(locale0);
      CalDay calDay0 = new CalDay((GregorianCalendar) GregorianCalendar0);
      calDay0.getYear();
  }

  @Test
  public void test05()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.year = (-2864);
      calDay0.getYear();
  }

  @Test
  public void test06()  throws Throwable  {
      GregorianCalendar GregorianCalendar0 = new GregorianCalendar(5, 5, 5, 5, 5);
      CalDay calDay0 = new CalDay((GregorianCalendar) GregorianCalendar0);
      Appt appt0 = new Appt(5, 5, 5, 5, 5, "PiSe", "PiSe");
      calDay0.addAppt(appt0);
      calDay0.getSizeAppts();
  }

  @Test
  public void test07()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.getMonth();
  }

  @Test
  public void test08()  throws Throwable  {
      GregorianCalendar GregorianCalendar0 = new GregorianCalendar(1, 301, 1, 1, 0, 0);
      CalDay calDay0 = new CalDay((GregorianCalendar) GregorianCalendar0);
      calDay0.getMonth();
  }

  @Test
  public void test09()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.month = (-711);
      calDay0.getMonth();
  }

  @Test
  public void test10()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.getDay();
  }

  @Test
  public void test11()  throws Throwable  {
      GregorianCalendar GregorianCalendar0 = new GregorianCalendar();
      CalDay calDay0 = new CalDay((GregorianCalendar) GregorianCalendar0);
      calDay0.getDay();
  }

  @Test
  public void test12()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.day = (-2119);
      calDay0.getDay();
  }

  @Test
  public void test13()  throws Throwable  {
      GregorianCalendar GregorianCalendar0 = new GregorianCalendar(1, 301, 1, 1, 0, 0);
      CalDay calDay0 = new CalDay((GregorianCalendar) GregorianCalendar0);
      calDay0.appts = null;
      calDay0.getAppts();
  }

  @Test
  public void test14()  throws Throwable  {
      GregorianCalendar GregorianCalendar0 = new GregorianCalendar();
      CalDay calDay0 = new CalDay((GregorianCalendar) GregorianCalendar0);
      calDay0.getAppts();
  }

  @Test
  public void test15()  throws Throwable  {
      GregorianCalendar GregorianCalendar0 = new GregorianCalendar(0, 0, 0);
      CalDay calDay0 = new CalDay((GregorianCalendar) GregorianCalendar0);
      Appt appt0 = new Appt(0, 0, 14, 1, 0, "", "");
      calDay0.addAppt(appt0);
      Appt appt1 = new Appt(2, 2, 2, 1, 212, "`R60/F=m'", "\t --- 11/31/2 --- \n --- -------- Appointments ------------ --- \n\t1/14/0 at 12:0am ,, \n \n");
      calDay0.addAppt(appt1);
  }

  @Test
  public void test16()  throws Throwable  {
      GregorianCalendar GregorianCalendar0 = new GregorianCalendar(1, 301, 1, 1, 0, 0);
      CalDay calDay0 = new CalDay((GregorianCalendar) GregorianCalendar0);
      calDay0.appts = null;
      // Undeclared exception!
      try { 
        calDay0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         //assertThrownBy("edu.osu.cs362.CalDay", e);
      }
  }

  @Test
  public void test17()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      // Undeclared exception!
      try { 
        calDay0.getSizeAppts();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
        // assertThrownBy("edu.osu.cs362.CalDay", e);
      }
  }

  @Test
  public void test18()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      Appt appt0 = new Appt(1, 1, 1, 1, 1, "!D", "4@6L");
      // Undeclared exception!
      try { 
        calDay0.addAppt(appt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
        // assertThrownBy("edu.osu.cs362.CalDay", e);
      }
  }

  @Test
  public void test19()  throws Throwable  {
      CalDay calDay0 = null;
      try {
        calDay0 = new CalDay((GregorianCalendar) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
        // assertThrownBy("edu.osu.cs362.CalDay", e);
      }
  }

  @Test
  public void test20()  throws Throwable  {
      GregorianCalendar GregorianCalendar0 = new GregorianCalendar(474, (-1423), 0, 0, 0, 474);
      GregorianCalendar0.set(0, 474);
      CalDay calDay0 = null;
      try {
        calDay0 = new CalDay((GregorianCalendar) GregorianCalendar0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid era
         //
        // assertThrownBy("java.util.GregorianCalendar", e);
      }
  }

  @Test
  public void test21()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.toString();
  }

  @Test
  public void test22()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      Appt appt0 = new Appt((-2836), (-2119), (-2119), 45, (-2836), "arh", "arh");
      calDay0.addAppt(appt0);
  }

  @Test
  public void test23()  throws Throwable  {
      GregorianCalendar GregorianCalendar0 = new GregorianCalendar(0, 0, 0);
      CalDay calDay0 = new CalDay((GregorianCalendar) GregorianCalendar0);
      Appt appt0 = new Appt(0, 0, 14, 1, 0, "", "");
      calDay0.addAppt(appt0);
      calDay0.toString();
  }

  @Test
  public void test24()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.valid = true;
      // Undeclared exception!
      try { 
        calDay0.iterator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
        // assertThrownBy("edu.osu.cs362.CalDay", e);
      }
  }

  @Test
  public void test25()  throws Throwable  {
      GregorianCalendar GregorianCalendar0 = new GregorianCalendar(5, 5, 5, 5, 5);
      CalDay calDay0 = new CalDay((GregorianCalendar) GregorianCalendar0);
      calDay0.getSizeAppts();
      assertEquals(5, calDay0.getMonth());
      assertEquals(5, calDay0.getYear());
      assertEquals(5, calDay0.getDay());
  }

  @Test
  public void test26()  throws Throwable  {
      GregorianCalendar GregorianCalendar0 = new GregorianCalendar(3, 3, 3, 3, 3);
      CalDay calDay0 = new CalDay((GregorianCalendar) GregorianCalendar0);
      Appt appt0 = new Appt(3, 3, 3, 3, 3, "63/p$p'x[XhY6EM}", "63/p$p'x[XhY6EM}");
      calDay0.addAppt(appt0);
      Appt appt1 = new Appt(2, 2, 2, 2, 3, "63/p$p'x[XhY6EM}", "63/p$p'x[XhY6EM}");
      calDay0.addAppt(appt1);
      assertEquals(2, calDay0.getSizeAppts());
  }

  @Test
  public void test27()  throws Throwable  {
      GregorianCalendar GregorianCalendar0 = new GregorianCalendar(0, 0, 0);
      CalDay calDay0 = new CalDay((GregorianCalendar) GregorianCalendar0);
      Appt appt0 = new Appt(0, 0, 14, 1, 0, "", "");
      calDay0.addAppt(appt0);
      calDay0.addAppt(appt0);
      assertEquals(2, calDay0.getSizeAppts());
  }

  @Test
  public void test28()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      Iterator<?> iterator0 = calDay0.iterator();
      assertNull(iterator0);
  }
}
