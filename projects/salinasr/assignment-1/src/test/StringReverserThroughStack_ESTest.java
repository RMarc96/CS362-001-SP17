/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 18 04:28:37 GMT 2017
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringReverserThroughStack_ESTest extends StringReverserThroughStack_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringReverserThroughStack stringReverserThroughStack0 = new StringReverserThroughStack((String) null);
      // Undeclared exception!
      try { 
        stringReverserThroughStack0.doRev();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("StringReverserThroughStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringReverserThroughStack stringReverserThroughStack0 = new StringReverserThroughStack("");
      // Undeclared exception!
      try { 
        stringReverserThroughStack0.doRev();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("StringReverserThroughStack$Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringReverserThroughStack stringReverserThroughStack0 = new StringReverserThroughStack("&");
      StringReverserThroughStack.Stack stringReverserThroughStack_Stack0 = stringReverserThroughStack0.new Stack(3343);
      boolean boolean0 = stringReverserThroughStack_Stack0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringReverserThroughStack stringReverserThroughStack0 = new StringReverserThroughStack(">9p=T*aF");
      // Undeclared exception!
      try { 
        stringReverserThroughStack0.doRev();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         assertThrownBy("StringReverserThroughStack$Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StringReverserThroughStack stringReverserThroughStack0 = new StringReverserThroughStack("&");
      String string0 = stringReverserThroughStack0.doRev();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StringReverserThroughStack stringReverserThroughStack0 = new StringReverserThroughStack("&");
      StringReverserThroughStack.Stack stringReverserThroughStack_Stack0 = stringReverserThroughStack0.new Stack(3343);
      // Undeclared exception!
      try { 
        stringReverserThroughStack_Stack0.pop();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         assertThrownBy("StringReverserThroughStack$Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StringReverserThroughStack stringReverserThroughStack0 = new StringReverserThroughStack("SVD#B|lG");
      StringReverserThroughStack.Stack stringReverserThroughStack_Stack0 = stringReverserThroughStack0.new Stack(1444);
      // Undeclared exception!
      try { 
        stringReverserThroughStack_Stack0.peek();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         assertThrownBy("StringReverserThroughStack$Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        StringReverserThroughStack.main(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         assertThrownBy("StringReverserThroughStack$Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      StringReverserThroughStack stringReverserThroughStack0 = new StringReverserThroughStack(")<!G;Lf:mkbxX$+\"");
      StringReverserThroughStack.Stack stringReverserThroughStack_Stack0 = stringReverserThroughStack0.new Stack(2064);
      // Undeclared exception!
      try { 
        stringReverserThroughStack_Stack0.push('-');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         assertThrownBy("StringReverserThroughStack$Stack", e);
      }
  }
}
